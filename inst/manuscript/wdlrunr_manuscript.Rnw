\documentclass{article}
\usepackage{color}
\definecolor{BiocBlue}{RGB}{24,129,194}
\usepackage[
  colorlinks, linkcolor=BiocBlue, citecolor=BiocBlue,
  anchorcolor=BiocBlue, urlcolor=BiocBlue
]{hyperref}
\usepackage{todonotes}
\usepackage[margin=1in]{geometry}
\usepackage[
  maxbibnames=99,backend=biber,citestyle=authoryear,sorting=ydnt
]{biblatex}
\addbibresource{citations.bib}
\title{\wdlRunR: Run Workflow Description Language (WDL) workflows from R}
\author{Sean R. Davis\thanks{seandavi@gmail.com, to whom correspondence should be addressed}  \\
        Center for Cancer Research\\
        National Cancer Institute\\
        National Institutes of Health\\
        }

\date{\today}

\def\code#1{\texttt{#1}}

\newcommand{\Bioconductor}{\emph{Bioconductor}}
\newcommand{\R}{\emph{R}}
\newcommand\Biocpkg[1]{
  {\href{http://bioconductor.org/packages/#1}%
  {\textit{#1}}}}
\newcommand\Rpkg[1]{
  {\href{https://cran.r-project.org/package=#1}%
  {\textit{#1}}}}
\newcommand\github[2]{
  {\href{http://github.org/#1/#2}%
  {\textit{#2}}}}
\newcommand{\wdlRunR}{\github{seandavi}{wdlRunR}}

\begin{document}
\maketitle

<<init,include=FALSE>>=
library(knitr)
@ 

\begin{abstract}
  Biomedical research and precision medicine are now data-intensive
  endeavors. Complex computational pipelines composed of multiple
  dependent and interrelated tasks are often intrinsic to the
  interpretation of multiple -omics assays, medical imaging, and
  numerous sources of textual and unstructured data. Numerous toolsets
  and workflow frameworks facilitate the design and execution of these
  computational pipelines. Many of these workflow approaches isolate
  the pipeline and workflow descriptions and their execution from
  commonly-used data science tools such as \R that facilitate
  contextual documentation, literate programming, and interactive
  analysis and visualization. The \wdlRunR package provides the
  interface between the \R interactive data science environment and
  arbitrary-scale orchestration of complex complex workflows described
  using the Workflow Description Language (WDL). \\
  \textbf{Availability}: \url{https://github.com/seandavi/wdlRunR}\\
  \textbf{Keywords}: bioinformatics, genomics, cloud computing,
  reproducible research
\end{abstract}

\section*{Introduction}

Biomedical research has rapidly become a data-intensive science. Many
scientific questions, such as those involving large-scale sequencing,
involve orchestrating computationally complex and demanding data
processing pipelines that transform the raw data into more compact and
information-rich processed data. A large ecosystem of workflow systems
exists (see,
\href{https://github.com/pditommaso/awesome-pipeline}{here} for a
large list). The particular implementation details, strengths and
weaknesses, and suitability applications varies quite
significantly. 

A robust and reliable workflow management system will address three
key challenges (\cite{rabix}): flexibility, portability, and
reproducibility. The flexibility of a workflow management system will
support workflow descriptions that ``gracefully handle large volumes
of data with multiple formats'' (\cite{rabix}) and provide
generalizations that promote workflow descriptions that can be applied
to different datasets without requiring different versions of the
workflow. Portability, or the ability to run workflows in multiple
compute environments, enabling researchers to move or expand
computational workloads with minimal re-engineering or workflow
development (\cite{rabix}). Portable workflows also significantly
reduce barriers to collaboration and workflow component
re-use. Finally, a workflow management system should support
reproducible computational research approaches
(\cite{Sandve2013}). The Cromwell software from the Broad Institute is
a software toolkit that executes WDL workflows \cite{Cromwell}. When
used in ``server'' mode, the Cromwell system can accept workflows as
``jobs'' via a RESTful application programming interface (API) and
then orchestrate their execution in a number of compute environments
(after appropriate setup and configuration; see \cite{Cromwell}).

The Workflow Description Language (WDL) is ``a new workflow definition
language that is designed from the ground up as a human-readable and
-writable way to express tasks and workflows.'' \cite{WDLsite}). A WDL
workflow describes the inputs, outputs, and transformations between
them in a text format defined by a well-defined specification. The
specification allows relatively straightforward definition of
computational tasks, each composed of a command-line script,
associated inputs and outputs, and compute resource requirements
necessary to run the task. WDL tasks can be combined with other
dependent tasks to form complex and parallelizable workflows.

Given the number of genomic data scientists and bioinformaticians who
perform the majority of their work using the R statistical programming
environment \cite{RCoreTeam2016} and \Bioconductor \cite{Huber2015}, we have
developed the \wdlRunR software to provide an \R interface to the
Cromwell server. We expect that this combination of robust workflow
management with the reproducible research and data management
strengths of the \R environment will provide a powerful, scalable,
end-to-end genomics processing and data science platform.

\section{Design and Usage}


The \wdlRunR software is implemented in \R as standard \R package with
functions to access the \textit{Cromwell} server RESTful API using S3
classes and methods. The functionality for submitting, managing, and
monitoring jobs mirrors that of the Cromwell server API
\cite{Cromwell} and is outlined in Table \ref{tab:api}. The \wdlRunR
package is the interactive \R-based component of a larger ecosystem
for running workflows. The \textit{Cromwell} server can be configured
to execute on one or more ``execution backends'', all of which require
configuration prior to running \textit{Cromwell}. The
\github{broadinstitute}{cromwell} home page has extensive
documentation on how to configure various execution backends.

Once configured, 

\section{Conclusion}

The \wdlRunR package combines interactive \R statistical programming
environment with scalable, robust workflow orchestration offered by
WDL workflows and the \textit{Cromwell} execution engine. Managing
input parameters and data munging, monitoring workflows, and then
operating on resulting processed files, particularly when adapted to
literate programming approaches such as R markdown documents makes R a
natural framework for . with its tooling for data munging,
reproducible computational research tools, and extensive data ana



<<endpoints,results='asis',echo=FALSE>>=
x = read.csv('wdlrunr_functions.csv',check.names=FALSE)
library(xtable)
print(xtable(x, caption = "Table of functionality for interacting with the Cromwell workflow manager.",
             row.names=FALSE,label="tab:api"),include.rownames=FALSE)
@ 

\begin{figure}
  \caption{The entire \wdlRunR architecture includes the \textit{Cromwell} server, running on the local \R system or on a standalone machine, that accepts requests to run workflows on one of the supported ``execution backends''.  The configured ``default'' execution backend will be used unless another is specified in the WDL file and is available (configured). }
  \label{fig:arch}
  \centering
  \includegraphics{arch}
\end{figure}


\printbibliography

  


\end{document}
